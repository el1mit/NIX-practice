@use "sass:math";

@import 'vars';
@import 'reset';
@import 'libs';
@import 'mixins';
//Import pages styles
@import 'header';
@import 'footer';
@import 'breadcrumbs';
@import 'ceo';
@import 'catalog';
@import 'item';

//Import fonts5=============================================================
//&dislpay=swap - add if importing thougth plugin
@import url(https://fonts.googleapis.com/css?family=Roboto:300,400,600,700&dislpay=swap);

//Import local font files==================================================
@import 'fonts/fonts';

//Import icons fonts=======================================================
@import 'fonts/icons';

//Grobal params============================================================
body {
    background-color: $bgColor;
    font-family: $fontFamilly;
    color: $mainColor;
    font-weight: 400;
	// .lock & {
    //     overflow: hidden;
    //     touch-action: none;
    // }
}

.wrapper {
    min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
    //Page loaded
    // .loaded & {
    // }
    //Lock footer
    > main {
        flex: 1 1 auto;
    }
    //Sliders fix
    > * {
        min-width: 0;
    }
}

//Container
@if ($responsiveType == 1) {
    [class*="__container"] {
        @if ($maxWidthContainer > 0) {
            max-width: $maxWidthContainer;
            box-sizing: content-box;
            margin: 0 auto;
        }
        @if ($containerPadding > 0) { 
            padding: 0 math.div($containerPadding, 2);
        }
    }
} @else {
    [class*="__container"] {
        margin: 0 auto;
        @if ($maxWidthContainer > 0) {
            max-width: $maxWidthContainer;
            box-sizing: content-box;
        } @else {
            @if ($containerPadding > 0) { 
                padding: 0 math.div($containerPadding, 2);
            }
        }
        @media (max-width: $pc) {
            max-width: 970px;
        }
        @media (max-width: $tablet) {
            max-width: 750px;
        }
        @media (max-width: $mobile) {
            max-width: none;
            @if ($containerPadding > 0 and $maxWidthContainer > 0) { 
                padding: 0 math.div($containerPadding, 2);
            }
        }
    }
}
